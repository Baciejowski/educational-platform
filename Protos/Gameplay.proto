syntax = "proto3";
package Gameplay;


service GameRequests {
    rpc StartNewSession(SessionCode) returns (Session);
    rpc PrepareNextQuestion(QuestionRequest) returns (Question);
    rpc UpdateStudentsAnswers(StudentAnswer) returns (Empty);
    rpc UpdateCash(Cash) returns (Empty);
    rpc FinishGame(Empty) returns (Empty);
}

message SessionCode {
    string sessionCode = 1;
}

message Session {
    message SessionData {
        message ScenarioData {
            string scenarioName = 1;
            string topicName = 2;
            uint32 obligatoryQuestions = 3;
            uint32 optionalQuestions = 4;
            // like "2021-10-22T23:59:59.999Z"
            optional string timestampClosing = 5; 
        }
        string studentFirstName = 1;
        string classFriendlyName = 2;
        ScenarioData scenarioData = 3;
        uint32 initialCash = 4;
    }
    // will be false if one of the following is true:
    // - time for session expired,
    // - time for session didn't come or
    // - sessionCode is unknown for the server
    // if false session data will be ommited
    // if true error description will ommited
    bool correct = 1;
    optional string errorDescription = 2;
    optional SessionData sessionData = 3;
}

message QuestionRequest {
    string sessionCode = 1;
    // order of served questions if flag below is:
    // - true:  
    //          1. obligatory not answered
    //          2. obligatory answered wrongly
    //          3. nonobligatory not answered
    //          4. nonobligatory answered wrongly
    //          5. random answered question
    // - false:
    //          1. nonobligatory not answered
    //          2. nonobligatory answered wrongly
    //          3. random answered question
    bool shouldBeObligatoryQuestion = 2;
}

message Question {
    enum QuestionType {
        BOOLEAN = 0;
        ABCD = 1;
        OPEN = 2;
    }
    message Answer {
        uint32 answerID = 1;
        string content = 2;
        bool correct = 3;
        optional string argumentation = 4;
    }
    uint32 questionID = 1;
    string content = 2;
    optional string hint = 3;
    uint32 difficulty = 4;
    QuestionType questionType = 5;
    optional bool booleanAnswer = 6;
    repeated Answer answers = 7;
}

message StudentAnswer{
    uint32 questionID = 1;
    uint32 answerID = 2;
    bool hintUsed = 3;
    uint32 timeSpend = 4;
}

message Cash {
    uint32 cash = 1;
}


message Empty {

}